body: >
  <h3>Creating New Todos with a Text Field (cont)</h3>

  <p>Now itâ€™s time to tell Ember how to handle events for your &lt;input&gt; tag. When the user types in the field and
  presses the return key, we will create a new Todo and have it inserted into the content of the array controller.</p>

  <p>Since CreateTodoView will handle events for a text field, we create a subclass of SC.TextField, which provides
  several conveniences for working with these input controls. For example, you can access the value property and
  respond to higher level events, such as insertNewline, when the user presses enter.</p>

codeTarget: 'javascript'

code: |
  Todos.CreateTodoView = SC.TextField.extend({
    insertNewline: function() {
      var value = this.get('value');

      if (value) {
        Todos.todosController.createTodo(value);
        this.set('value', '');
      }
    }
  });

validator: |
  if (!context.Todos.CreateTodoView || context.Todos.CreateTodoView.superclass !== context.SC.TextField) {
    this.addError("Couldn't find CreateTodoView");
  }
  // TODO: Check for insertNewline as well
